@using OnlineMusicProject.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Identity;
@model OnlineMusicProject.ViewModels.AlbumsPage.AlbumsAndSongsViewModel
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->
	<!-- Title -->
	<title>Online Music</title>

	<!-- Favicon -->
	<link rel="icon" href="/img/core-img/favicon.ico">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
	<!-- Stylesheet -->
	<link rel="stylesheet" href="/css/style.css">
	<link rel="stylesheet" href="/css/SongsOnline/songdetail.css">

	<style>
		.switch {
			position: relative;
			display: inline-block;
			width: 50px;
			height: 30px;
		}

			.switch input {
				opacity: 0;
				width: 0;
				height: 0;
			}

		.slider {
			position: absolute;
			cursor: pointer;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: #ccc;
			transition: 0.4s;
			border-radius: 30px;
		}

			.slider:before {
				position: absolute;
				content: "";
				height: 20px;
				width: 20px;
				border-radius: 50%;
				left: 4px;
				bottom: 5px;
				background-color: white;
				transition: 0.4s;
				background: white
			}

		input:checked + .slider {
			background-color: lightgreen;
		}

			input:checked + .slider:before {
				transform: translateX(20px);
			}

		.fixed-size-img {
			width: 120px;
			height: 120px;
			object-fit: cover;
		}

		.related-song-img {
			width: 60px;
			height: 60px;
			object-fit: cover;
		}

		.edit-button i {
			transition: color 0.3s ease;
		}

		.edit-button:hover i {
			color: black;
		}

		.modal {
			display: none;
			position: fixed;
			z-index: 9999;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.4);
		}

		.modal-content {
			background-color: white;
			margin: 15% auto;
			padding: 20px;
			border: 1px solid #888;
			width: 300px;
			border-radius: 5px;
			text-align: center;
			z-index: 10000;
		}

		.close {
			color: #aaa;
			float: right;
			font-size: 28px;
			font-weight: bold;
		}

			.close:hover,
			.close:focus {
				color: black;
				text-decoration: none;
				cursor: pointer;
			}

		#updateNameForm input {
			padding: 10px;
			width: 100%;
			margin-bottom: 10px;
			font-size: 16px;
			border-radius: 5px;
			border: 1px solid #ddd;
		}

		#updateNameForm button {
			padding: 10px;
			width: 100%;
			background-color: #4CAF50;
			color: white;
			font-size: 16px;
			border: none;
			border-radius: 5px;
			cursor: pointer;
		}

			#updateNameForm button:hover {
				background-color: #45a049;
			}


		.song-container {
			display: flex;
			align-items: center;
			justify-content: center;
			gap: 10px;
		}

			.song-container img {
				width: 60px;
				height: 60px;
				object-fit: cover;
				border-radius: 50%;
			}


		.song-info {
			display: flex;
			flex-direction: column;
		}

			.song-info h6, .song-info p {
				margin-bottom: 0;
			}

		.audio-control {
			display: none;
		}

		.modalEdit {
			display: none;
			position: fixed;
			z-index: 9999;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.4);
		}

		.modalEdit-content {
			background-color: white;
			margin: 15% auto;
			padding: 20px;
			border: 1px solid #888;
			width: 300px;
			border-radius: 5px;
			text-align: center;
			z-index: 10000;
		}

		.closeEdit {
			color: #aaa;
			float: right;
			font-size: 28px;
			font-weight: bold;
			position: relative;
			bottom: 25px;
		}

			.closeEdit:hover,
			.closeEdit:focus {
				color: black;
				text-decoration: none;
				cursor: pointer;
			}

		#updatePlaylistForm input {
			padding: 10px;
			width: 100%;
			margin-bottom: 10px;
			font-size: 16px;
			border-radius: 5px;
			border: 1px solid #ddd;
		}

		#updatePlaylistForm button {
			padding: 10px;
			width: 100%;
			background-color: #4CAF50;
			color: white;
			font-size: 16px;
			border: none;
			border-radius: 5px;
			cursor: pointer;
		}

			#updatePlaylistForm button:hover {
				background-color: #45a049;
			}

		.delete-btn {
			background-color: transparent;
			border: none;
			cursor: pointer;
			color: gray;
			transition: color 0.3s ease;
			font-size: 15px;
			outline: none;
		}

			.delete-btn:hover {
				color: red;
				border: none;
				outline: none;
				background: lightgray
			}

		.audioplayer-next {
			width: 20px;
			height: 20px;
			position: relative;
			bottom: 23px;
			left: 30px;
			margin-left: 5px;
			border: none;
			outline: none;
			cursor: pointer;
			background: #262626;
			color: white
		}

		.audioplayer-prev {
			width: 20px;
			height: 20px;
			position: relative;
			bottom: 23px;
			right: 30px;
			border: none;
			outline: none;
			cursor: pointer;
			background: #262626;
			color: white
		}

		.bradcumbContent {
			text-align: center;
			display: flex;
			align-items: center;
			justify-content: center;
		}

		.breadcumb-area {
			width: 100%;
			height: 100vh;
			display: flex;
			align-items: center;
			justify-content: center;
			background-size: cover;
			background-position: center;
		}
	</style>
</head>

<body>

	<section class="breadcumb-area bg-img bg-overlay" style="background-image: url(/img/bg-img/breadcumb3.jpg);">
		<div class="bradcumbContent" style="display: block">
			<h2 style="margin-bottom: 0">@Model.album.Title </h2>
			<a asp-controller="Artists" asp-action="SongsOf" asp-route-artist ="@Model.album.Artists.ArtistName" >
				<h4 style="margin: 10px 0; color: blue">@Model.album.Artists.ArtistName</h4>
			</a>
		</div>
	</section>
	<div style="margin-top: 20px">
		@if (TempData["MsgToDetail"] != null)
		{
			<div id="tempAlert" class="alert alert-info" style="text-align: center; font-size: 20px">
				@TempData["MsgToDetail"]
			</div>
		}
	</div>

    <div class="one-music-songs-area mb-70" style="margin-top: 40px">
		<div class="container">
			<div class="row">
				<div class="col-md-9">
					<div class="single-song-area mb-30 d-flex flex-wrap align-items-center justify-content-center">
						<div class="song-thumbnail">
							<img src="@Model.SingleAlbumSongs.Songs.ImageSong" alt="@Model.SingleAlbumSongs.Songs.NameSong" style="height: 150px;">
						</div>
						<div class="song-play-area text-center w-100" style="padding: 20px 60px;">
							<div class="song-name">
								<p>@Model.SingleAlbumSongs.Songs.NameSong - @Model.SingleAlbumSongs.Songs.Artists.ArtistName</p>
							</div>
							<audio id="audio-player" controls autoplay>
								<source id="audioSource" src="@Model.SingleAlbumSongs.Songs.FilePath" type="audio/mp3">
							</audio>
							<div class="audioplayer" style="height: 0">
								<button id="prev-play" class="audioplayer-prev">
									<i class="fas fa-step-backward"></i>
								</button>
								<button id="next-play" class="audioplayer-next">
									<i class="fas fa-step-forward"></i>
								</button>
							</div>
							<div id="replay" style="cursor: pointer; height: 0px" onclick="toggleLoop()">
								<i id="replay-icon" class="fas fa-sync-alt" style="font-size: 16px; color: white; position: relative; bottom: 33px; left: 275px"></i>
							</div>
							<div class="button-group">
								@if (User.Identity.IsAuthenticated)
								{
									<button class="playlist-btn" onclick="openModal()" style="width:200px">
										<span class="icon">❤️</span> Add to playlist
									</button>
								}
								else
								{
									<a asp-controller="Account" asp-action="Login" class="playlist-btn" style="width:200px">
										<span class="icon">❤️</span> Add to playlist
									</a>
								}
								<a href="@Model.SingleAlbumSongs.Songs.FilePath" download class="download-btn" style="width: 200px">
									<span class="icon">⬇</span> Download
								</a>
							</div>
						</div>

					</div>
				</div>
				<div class="col-md-3" style="background: lightgray">
					<div id="auto-slide-toggle" style="margin-top: 20px; display: flex; justify-content: center; align-items: center;">
						<label class="switch">
							<input type="checkbox" id="auto-slide-checkbox" checked>
							<span class="slider"></span>
						</label>
						<span id="auto-slide-status" style="margin-left: 10px; font-size: 18px; color: gray; margin-bottom: 10px;">Auto-Play</span>
					</div>
					@foreach (var s in Model.albumSongs)
					{
						<div style="display: flex; justify-content: space-around; margin:10px 0">
							<div class="song-container">
								<img src="@s.Songs.ImageSong" alt="@s.Songs.ImageSong">
								<div class="song-info">
									<h6>@s.Songs.Artists.ArtistName</h6>
									<p>@s.Songs.NameSong</p>
								</div>
							</div>
							<form asp-action="Details" method="get">
								<input type="hidden" name="albumId" value="@Model.album.AlbumId" />
								<input type="hidden" name="songId" value="@s.SongId" />
								<button type="submit"
										style="border: none; padding: 5px; border-radius: 50%; background: white; width: 30px; height: 30px; position: relative;top: 12px; left: 10px">
									<i class="fas fa-play"></i>
								</button>
							</form>
						</div>
					}
				</div>

			</div>
		</div>
	</div>
	<div id="myModal" class="modal">
		<div class="modal-content">
			<span class="close" onclick="closeModal()" style="text-align: right;">&times;</span>

			<div style="border-bottom: 1px solid lightgray; margin: 5px 0">
				@foreach (var play in Model.PlaylistItems)
				{
					<div>
						<a asp-controller="Albums"
						   asp-action="addSongToPlaylist"
						   asp-route-playlistId="@play.PlaylistId"
						   asp-route-itemId="@Model.album.AlbumId"
						   asp-route-songId="@Model.SingleAlbumSongs.Songs.SongId"
						   style="display: flex; justify-content: space-between;
                        text-decoration: none;padding: 0 5px;">
							<div style="display: flex; align-items: center;">
								<p style="color: black; font-size: 16px; margin-bottom: 0">@play.PlaylistName</p>
								@foreach (var cp in Model.PlaylistItemsWithCounts)
								{
									@if (cp.Playlists.PlaylistId == play.PlaylistId)
									{
										<p style="margin-bottom: 0; margin-left: 5px">(@cp.CountSongInPlaylist)</p>
									}
								}
							</div>
							<p style="color: black; font-size: 16px; margin-bottom: 0">@play.CreatedAt?.ToString("dd/MM/yyyy")</p>
						</a>
					</div>
				}
			</div>
			<form id="updateNameForm" asp-controller="Albums" asp-action="CreatePlaylist" method="post">
				<div>
					<input type="hidden" name="songId" value="@Model.SingleAlbumSongs.Songs.SongId" />
					<input type="hidden" name="albumId" value="@Model.album.AlbumId" />
					<input name="playlistName" placeholder="Enter new name"/>
					<span id="nameError" class="text-danger" style="display:none;">Playlist name is required.</span>
				</div>
				<button type="submit">Create Playlist</button>
			</form>
		</div>
	</div>
	<script src="/js/jquery/jquery-2.2.4.min.js"></script>
	<!-- Popper js -->
	<script src="/js/bootstrap/popper.min.js"></script>
	<!-- Bootstrap js -->
	<script src="/js/bootstrap/bootstrap.min.js"></script>
	@* <!-- All Plugins js --> *@
	@* <script src="/js/plugins/plugins.js"></script> *@
	<!-- Active js -->
	<script src="/js/active.js"></script>
	<script>
		var modal = document.getElementById("myModal");

		function openModal() {
			modal.style.display = "block";
		}

		function closeModal() {
			modal.style.display = "none";
		}

		window.onclick = function (event) {
			if (event.target == modal) {
				closeModal();
			}
		}

		document.getElementById("updateNameForm").addEventListener("submit", function (event) {
			var playlistName = document.querySelector('input[name="playlistName"]').value.trim();
			var nameError = document.getElementById("nameError");

			if (!playlistName) {
				event.preventDefault();
				nameError.style.display = "inline"; 
				return;
			}
			nameError.style.display = "none";
		});
	</script>
	<script>
		function toggleLoop() {
			var audioPlayer = document.getElementById('audio-player');
			var replayIcon = document.getElementById('replay-icon');
			audioPlayer.loop = !audioPlayer.loop;
			replayIcon.style.color = audioPlayer.loop ? 'blue' : 'white';

		}
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const songs = @Html.Raw(Json.Serialize(Model.albumSongs));
			let currentSongIndex = songs.findIndex(song => song.songId === "@Model.SingleAlbumSongs.Songs.SongId");
			const audioPlayer = document.getElementById("audio-player");
			const audioSource = document.getElementById("audioSource");
			const songNameElement = document.querySelector(".song-name p");
			const songThumbnail = document.querySelector(".song-thumbnail img");
			const autoSlideCheckbox = document.getElementById("auto-slide-checkbox");
			const autoSlideStatus = document.getElementById("auto-slide-status");

			audioPlayer.addEventListener("ended", function () {
				if (autoSlideCheckbox.checked) {
					currentSongIndex = (currentSongIndex < songs.length - 1) ? currentSongIndex + 1 : 0;
					updateSong();
				}
			});

			function updateSong() {
				const currentSong = songs[currentSongIndex];

				audioSource.src = currentSong.songs.filePath;
				audioPlayer.load();
				audioPlayer.play();

				songThumbnail.src = currentSong.songs.imageSong;
				songThumbnail.alt = currentSong.songs.nameSong;
				songNameElement.textContent = `${currentSong.songs.nameSong} - ${currentSong.songs.artists.artistName}`;
				updatePlaylistUI();
			}

			autoSlideCheckbox.addEventListener("change", function () {
				if (autoSlideCheckbox.checked) {
					autoSlideStatus.textContent = "Auto-Play";
					autoSlideStatus.style.color = "green";
				} else {
					autoSlideStatus.textContent = "Manual Play";
					autoSlideStatus.style.color = "gray";
				}
			});
			function updatePlaylistUI() {

				document.querySelectorAll("form button i").forEach(icon => {
					icon.classList.remove("fa-pause");
					icon.classList.add("fa-play");
				});

				const currentButtonIcon = document.querySelector(`form input[name="songId"][value="${songs[currentSongIndex].songId}"]`)
					?.closest("form")
					.querySelector("button i");

				if (currentButtonIcon) {
					currentButtonIcon.classList.remove("fa-play");
					currentButtonIcon.classList.add("fa-pause");
				}
			}
			updateSong();
		});
	</script>
	<script>
		var alertElement = document.getElementById("tempAlert");

		if (alertElement) {
			setTimeout(function () {
				alertElement.style.transition = "opacity 0.5s ease";
				alertElement.style.opacity = "0"; 

				setTimeout(function () {
					alertElement.remove();
				}, 500);
			}, 5000);
		}
	</script>

	<script>
		//Prev and next Song
		document.addEventListener("DOMContentLoaded", function () {
			const songs = @Html.Raw(Json.Serialize(Model.albumSongs));
			let currentSongIndex = songs.findIndex(song => song.songId === "@Model.SingleAlbumSongs.Songs.SongId")
			const audioPlayer = document.getElementById("audio-player");
			const audioSource = document.getElementById("audioSource");
			const songNameElement = document.querySelector(".song-name p");
			const songThumbnail = document.querySelector(".song-thumbnail img");

			document.getElementById("prev-play").addEventListener("click", function () {
				currentSongIndex = (currentSongIndex > 0) ? currentSongIndex - 1 : songs.length - 1;
				updateSong();
			});

			document.getElementById("next-play").addEventListener("click", function () {
				currentSongIndex = (currentSongIndex < songs.length - 1) ? currentSongIndex + 1 : 0;
				updateSong();
			});

			function updateSong() {
				const currentSong = songs[currentSongIndex];
				audioSource.src = currentSong.songs.filePath;
				audioPlayer.load();
				audioPlayer.play();

				songThumbnail.src = currentSong.songs.imageSong;
				songThumbnail.alt = currentSong.songs.nameSong;
				songNameElement.textContent = `${currentSong.songs.nameSong} - ${currentSong.songs.artists.artistName}`;
				updatePlaylistUI();
			}
			function updatePlaylistUI() {

				document.querySelectorAll("form button i").forEach(icon => {
					icon.classList.remove("fa-pause");
					icon.classList.add("fa-play");
				});

				const currentButtonIcon = document.querySelector(`form input[name="songId"][value="${songs[currentSongIndex].songId}"]`)
					?.closest("form")
					.querySelector("button i");

				if (currentButtonIcon) {
					currentButtonIcon.classList.remove("fa-play");
					currentButtonIcon.classList.add("fa-pause");
				}
			}
		});

	</script>
</body>

</html>